// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.4
// source: todo/todo.service.proto

package todo

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CreateTodoServiceClient is the client API for CreateTodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CreateTodoServiceClient interface {
	CreateTodo(ctx context.Context, in *CreateTodoRequest, opts ...grpc.CallOption) (*CreateTodoResponse, error)
}

type createTodoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreateTodoServiceClient(cc grpc.ClientConnInterface) CreateTodoServiceClient {
	return &createTodoServiceClient{cc}
}

func (c *createTodoServiceClient) CreateTodo(ctx context.Context, in *CreateTodoRequest, opts ...grpc.CallOption) (*CreateTodoResponse, error) {
	out := new(CreateTodoResponse)
	err := c.cc.Invoke(ctx, "/todo.CreateTodoService/CreateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreateTodoServiceServer is the server API for CreateTodoService service.
// All implementations must embed UnimplementedCreateTodoServiceServer
// for forward compatibility
type CreateTodoServiceServer interface {
	CreateTodo(context.Context, *CreateTodoRequest) (*CreateTodoResponse, error)
	mustEmbedUnimplementedCreateTodoServiceServer()
}

// UnimplementedCreateTodoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCreateTodoServiceServer struct {
}

func (UnimplementedCreateTodoServiceServer) CreateTodo(context.Context, *CreateTodoRequest) (*CreateTodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTodo not implemented")
}
func (UnimplementedCreateTodoServiceServer) mustEmbedUnimplementedCreateTodoServiceServer() {}

// UnsafeCreateTodoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CreateTodoServiceServer will
// result in compilation errors.
type UnsafeCreateTodoServiceServer interface {
	mustEmbedUnimplementedCreateTodoServiceServer()
}

func RegisterCreateTodoServiceServer(s grpc.ServiceRegistrar, srv CreateTodoServiceServer) {
	s.RegisterService(&CreateTodoService_ServiceDesc, srv)
}

func _CreateTodoService_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateTodoServiceServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.CreateTodoService/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateTodoServiceServer).CreateTodo(ctx, req.(*CreateTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CreateTodoService_ServiceDesc is the grpc.ServiceDesc for CreateTodoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CreateTodoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "todo.CreateTodoService",
	HandlerType: (*CreateTodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTodo",
			Handler:    _CreateTodoService_CreateTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo/todo.service.proto",
}
